@using LibraryManagementSystemApp.Models
@using LibraryManagementSystemApp.Services
@inject HttpClient Http
@inherits LayoutComponentBase
@inject HttpContextService HttpContextService
@inject IJSRuntime JS
@inject NavigationManager Navigation
@inject AuthService authService
@inject ApiService apiService

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="nav-menu">
            <div>
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <p>
                        <i class="fa-solid fa-triangle-exclamation fs-5 text-danger"></i>
                        Error
                    </p>
                }
                else
                {
                    @if (!string.IsNullOrEmpty(user.Id.ToString()))
                    {
                        <p class="fw-bolder pt-3">@user.UserName</p>
                    }
                }
            </div>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

<LibraryManagementSystemApp.Components.UI.Toast />

@code {
    private User user = new User();
    private string errorMessage = "";
    protected override async Task OnInitializedAsync()
    {
        var (data, error) = await apiService.SendRequestAsync<User>(HttpMethod.Get, "/api/v1/users/me");

        if (error != null)
        {
            errorMessage = error;
        }
        else
        {
            user = data;
        }
    }
}